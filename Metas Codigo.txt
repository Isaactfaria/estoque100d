import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from "recharts";

const setores = ["Comercial", "Operacional", "Gerência"];
const meses = ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"];

export default function PainelMetas() {
  const [dados, setDados] = useState(
    setores.map((setor) => ({
      setor,
      metas: meses.map((mes) => ({ mes, faturamento: "", margem: "" }))
    }))
  );

  const handleChange = (setorIndex, mesIndex, campo, valor) => {
    const novosDados = [...dados];
    novosDados[setorIndex].metas[mesIndex][campo] = valor;
    setDados(novosDados);
  };

  const calcularNivelMeta = (faturamento, margem) => {
    const fat = parseFloat(faturamento);
    const mar = parseFloat(margem);
    let nivelFat = "";
    let nivelMar = "";
    if (!isNaN(fat)) {
      if (fat >= 107000) nivelFat = "Excelente";
      else if (fat >= 105000) nivelFat = "Média";
      else if (fat >= 103000) nivelFat = "Mínima";
      else nivelFat = "Não batida";
    }
    if (!isNaN(mar)) {
      if (mar >= 26) nivelMar = "Excelente";
      else if (mar >= 25) nivelMar = "Média";
      else if (mar >= 24) nivelMar = "Mínima";
      else nivelMar = "Não batida";
    }
    return { nivelFat, nivelMar };
  };

  return (
    <div className="p-4 grid grid-cols-1 gap-6">
      {dados.map((setor, i) => (
        <Card key={setor.setor} className="shadow-xl">
          <CardContent>
            <h2 className="text-xl font-bold mb-4">{setor.setor}</h2>
            <div className="overflow-auto">
              <table className="w-full text-sm">
                <thead>
                  <tr className="bg-gray-100">
                    <th className="text-left px-2">Mês</th>
                    <th className="text-left px-2">Faturamento</th>
                    <th className="text-left px-2">Margem (%)</th>
                    <th className="text-left px-2">Meta Faturamento</th>
                    <th className="text-left px-2">Meta Margem</th>
                  </tr>
                </thead>
                <tbody>
                  {setor.metas.map((meta, j) => {
                    const { nivelFat, nivelMar } = calcularNivelMeta(meta.faturamento, meta.margem);
                    return (
                      <tr key={meta.mes} className="border-t">
                        <td className="px-2 py-1 font-medium">{meta.mes}</td>
                        <td className="px-2">
                          <Input
                            type="number"
                            value={meta.faturamento}
                            onChange={(e) => handleChange(i, j, "faturamento", e.target.value)}
                          />
                        </td>
                        <td className="px-2">
                          <Input
                            type="number"
                            value={meta.margem}
                            onChange={(e) => handleChange(i, j, "margem", e.target.value)}
                          />
                        </td>
                        <td className="px-2 text-sm">{nivelFat}</td>
                        <td className="px-2 text-sm">{nivelMar}</td>
                      </tr>
                    );
                  })}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      ))}
    </div>
  );
}
